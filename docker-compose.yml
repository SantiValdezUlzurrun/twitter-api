services:
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - network

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
    ports:
      - "5432:5432"
    volumes:
      - postgresdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d db -U admin" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - network

  twitter-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: twitter-api
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
      redis:
          condition: service_started
    environment:
      REDIS_ADDR: redis:6379
      POSTGRES_ADDR: postgres:5432
    networks:
      - network

networks:
  network:
    driver: bridge

volumes:
  postgresdata:
